# azure-pipelines.yml
# Defines the build process for www-jamesqmurphy-com

trigger:
- master
- releases/*

pool:
  vmImage: 'ubuntu-latest'

variables:
  versionMajor: 0
  versionMinor: 2
  versionPatch: 11
  buildConfiguration: 'Release'
  JQM.packageName: JamesQMurphy.Web.$(Build.BuildNumber).zip
  JQM.cloudformationFileName: cloudformation.yaml
  JQM.toolInstallDir: build/bin
  JQM.compareBranch: master
  JQM.versionFile: build/azure-pipelines.yml
  JQM.gitTagName: v$(Build.BuildNumber)

steps:
- checkout: self
  clean: true
  persistCredentials: true

- task: PowerShell@2
  displayName: Validate build against $(JQM.compareBranch) branch
  inputs:
    filePath: build/validate-build-against-branch.ps1
    arguments: -CompareBranch $(JQM.compareBranch) -VersionFile $(JQM.versionFile)

- task: PowerShell@2
  displayName: Set build number
  inputs:
    filePath: build/set-build-number.ps1

- script: dotnet tool install Amazon.Lambda.Tools --tool-path $(JQM.toolInstallDir)
  displayName: Install Amazon.Lambda.Tools

- script: ./dotnet-lambda package -c $(buildConfiguration) -pl $(Build.SourcesDirectory)/src/JamesQMurphy.Web -o $(Build.ArtifactStagingDirectory)/$(JQM.packageName) --msbuild-parameters "--self-contained true --runtime rhel-x64"
  displayName: Run dotnet-lambda package
  workingDirectory: $(JQM.toolInstallDir)

- script: dotnet test -c $(buildConfiguration) --logger trx --results-directory $(Common.TestResultsDirectory)
  displayName: Run dotnet test
  workingDirectory: $(Build.SourcesDirectory)/src

- task: CopyFiles@2
  displayName: Copy $(JQM.cloudformationFileName) to artifact staging folder
  inputs:
    SourceFolder: 'deploy'
    Contents: '$(JQM.cloudformationFileName)'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: Publish build artifacts
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'deploy' 

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'VSTest'
    testResultsFiles: '*.trx'
    searchFolder: '$(Common.TestResultsDirectory)'
    failTaskOnFailedTests: true

- task: GitHubRelease@0
  displayName: Create release in GitHub
  inputs:
    gitHubConnection: 'Create releases in GitHub'
    repositoryName: '$(Build.Repository.Name)'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'manual'
    tag: '$(JQM.gitTagName)'
    title: '$(JQM.gitTagName): $(Build.SourceVersionMessage)'
    assets: '$(Build.ArtifactStagingDirectory)/$(JQM.packageName)'
    isPreRelease: true
    addChangeLog: false
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    