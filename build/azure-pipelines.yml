# azure-pipelines.yml
# Defines the build process for www-jamesqmurphy-com

name: $(versionMajor).$(versionMinor).$(versionPatch)-$(Build.SourceBranchName)$(Rev:.r)

trigger:
- releases/*

pool:
  vmImage: 'ubuntu-latest'

variables:
  versionMajor: 0
  versionMinor: 0
  versionPatch: 10
  buildConfiguration: 'Release'
  JQM.packageName: JamesQMurphy.Web.zip
  JQM.cloudformationFileName: cloudformation.yaml
  JQM.toolInstallDir: build/bin

steps:
- script: dotnet tool install Amazon.Lambda.Tools --tool-path $(JQM.toolInstallDir)
  displayName: Install Amazon.Lambda.Tools

- script: ./dotnet-lambda package -c $(buildConfiguration) -pl $(Build.SourcesDirectory)/src/JamesQMurphy.Web -o $(Build.ArtifactStagingDirectory)/$(JQM.packageName) --msbuild-parameters "--self-contained true --runtime rhel-x64"
  displayName: Run dotnet-lambda package
  workingDirectory: $(JQM.toolInstallDir)

- script: dotnet test -c $(buildConfiguration) --logger trx --results-directory $(Common.TestResultsDirectory)
  displayName: Run dotnet test
  workingDirectory: $(Build.SourcesDirectory)/src

- task: CopyFiles@2
  displayName: Copy $(JQM.cloudformationFileName) to artifact staging folder
  inputs:
    SourceFolder: 'deploy'
    Contents: '$(JQM.cloudformationFileName)'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: Publish build artifacts
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'deploy' 

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'VSTest'
    testResultsFiles: '*.trx'
    searchFolder: '$(Common.TestResultsDirectory)'
    failTaskOnFailedTests: true